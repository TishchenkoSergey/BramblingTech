{"version":3,"sources":["components/LoadError.jsx","api/api.jsx","components/Search.jsx","components/SearchContent.jsx","App.jsx","index.jsx"],"names":["LoadError","memo","className","trackList","a","fetch","CORS_URL","response","json","result","data","Search","handleClose","handleChange","query","name","type","value","onChange","placeholder","onClick","src","alt","propTypes","PropTypes","func","isRequired","string","SearchContent","tracks","length","map","track","href","image","replace","Artist","title","ContentID","arrayOf","number","App","useState","loadError","setLoadError","loadTracks","setLoadTracks","setQuery","visibleSearchBar","setVisibleSearchBar","Track","getTracks","useMemo","filter","toLowerCase","includes","loadData","useCallback","debounce","event","preventDefault","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEaA,EAAYC,gBAAK,kBAC5B,qBAAKC,UAAU,QAAf,wDCAWC,EAAS,uCAAG,8BAAAC,EAAA,sEACAC,MAAMC,gGADN,cACjBC,EADiB,gBAEFA,EAASC,OAFP,cAEjBC,EAFiB,yBAIhBA,EAAOC,MAJS,2CAAH,qD,gBCATC,EAASV,gBAAK,gBAAGW,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,MAA9B,OACzB,qCACE,uBACEC,KAAK,GACLC,KAAK,GACLC,MAAOH,EACPI,SAAUL,EACVM,YAAY,oCAGd,wBACEH,KAAK,SACLd,UAAU,aAFZ,SAIE,mBAAGA,UAAU,mBAGf,wBACEc,KAAK,SACLd,UAAU,gBACVkB,QAASR,EAHX,SAKE,qBAAKS,IAAI,qBAAqBC,IAAI,aAKxCX,EAAOY,UAAY,CACjBV,aAAcW,IAAUC,KAAKC,WAC7Bd,YAAaY,IAAUC,KAAKC,WAC5BZ,MAAOU,IAAUG,OAAOD,YACxBA,WC/BK,IAAME,EAAgB3B,gBAAK,gBAAG4B,EAAH,EAAGA,OAAH,OAChC,qBAAK3B,UAAU,iBAAf,SACG2B,EAAOC,OAAS,EACZ,qBAAK5B,UAAU,gCAEhB,6BACG2B,EAAOE,KAAI,SAAAC,GAAK,OACf,6BACE,oBAAGC,KAAK,KAAR,UACE,qBACEZ,IACEW,EAAME,MAAMC,QAAQ,WAAY,OAElCb,IAAI,KAEN,+BAAOU,EAAMI,SACZ,MACAJ,EAAMK,UAVFL,EAAMM,qBAmB3BV,EAAcL,UAAY,CACxBM,OAAQL,IAAUe,QAAQ,CACxBD,UAAWd,IAAUgB,OAAOd,WAC5BQ,MAAOV,IAAUG,OAAOD,WACxBU,OAAQZ,IAAUG,OAAOD,WACzBW,MAAOb,IAAUG,OAAOD,aACvBA,YACHA,WC5BF,IA4Dee,EA5DH,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,OAGUJ,mBAAS,IAHnB,mBAGT5B,EAHS,KAGFiC,EAHE,OAIgCL,oBAAS,GAJzC,mBAITM,EAJS,KAISC,EAJT,iDAMhB,4BAAA7C,EAAA,+EAE2BD,IAF3B,OAEUI,EAFV,OAIIuC,EAAcvC,EAAS2C,MAAMxC,MAJjC,gDAMIkC,GAAa,GANjB,0DANgB,sBAgBhB,IAAMO,EAAYC,mBAAQ,kBAAMP,EAAWQ,QAAO,SAAArB,GAAK,OACrDA,EAAMI,OAAOkB,cAAcC,SAASzC,EAAMwC,gBACrCtB,EAAMK,MAAMiB,cAAcC,SAASzC,EAAMwC,oBAC5C,CAACxC,EAAO+B,IAENW,EAAWC,sBAAYC,KArBb,4CAqBwC,KAAO,IAkB/D,OACE,qCACE,qBAAKxD,UAAU,wBAAf,SACE,+BACGyC,EACG,cAAC3C,EAAD,IAEA,cAACW,EAAD,CACEC,YAdM,SAAC+C,GACnBA,EAAMC,iBACNb,EAAS,IACTE,GAAoB,IAYRpC,aAzBO,SAACmB,GAAW,IACvBf,EAAUe,EAAM6B,OAAhB5C,MAER8B,EAAS9B,GACTuC,IAEIP,EADM,KAAVhC,IAqBYH,MAAOA,QAMhBkC,GAAoB,cAACpB,EAAD,CAAeC,OAAQsB,QC3DlDW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8fa2dc6f.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nexport const LoadError = memo(() => (\n  <div className=\"error\">\n    Server not responding!\n    Reload the page!\n  </div>\n));\n","const CORS_URL = `https://cors-anywhere.herokuapp.com/`;\nconst URL = 'http://43.240.103.34/api.shadhin/api/search?keyword=valo';\n\nexport const trackList = async() => {\n  const response = await fetch(CORS_URL + URL);\n  const result = await response.json();\n\n  return result.data;\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Search = memo(({ handleClose, handleChange, query }) => (\n  <>\n    <input\n      name=\"\"\n      type=\"\"\n      value={query}\n      onChange={handleChange}\n      placeholder=\"Search artist, songs, videos...\"\n    />\n\n    <button\n      type=\"submit\"\n      className=\"btn-submit\"\n    >\n      <i className=\"fa fa-search\" />\n    </button>\n\n    <button\n      type=\"submit\"\n      className=\"search-cancil\"\n      onClick={handleClose}\n    >\n      <img src=\"img/icon-cross.png\" alt=\"\" />\n    </button>\n  </>\n));\n\nSearch.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchContent = memo(({ tracks }) => (\n  <div className=\"search-reasult\">\n    {tracks.length < 1\n      ? (<div className=\"spinner-border text-primary\" />)\n      : (\n        <ul>\n          {tracks.map(track => (\n            <li key={track.ContentID}>\n              <a href=\"#!\">\n                <img\n                  src={\n                    track.image.replace('<$size$>', '300')\n                  }\n                  alt=\"\"\n                />\n                <span>{track.Artist}</span>\n                {' - '}\n                {track.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      )}\n  </div>\n));\n\nSearchContent.propTypes = {\n  tracks: PropTypes.arrayOf({\n    ContentID: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    Artist: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n}.isRequired;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport debounce from 'lodash.debounce';\n\nimport { LoadError } from './components/LoadError';\nimport { trackList } from './api/api';\nimport { Search } from './components/Search';\nimport { SearchContent } from './components/SearchContent';\n\nconst App = () => {\n  const [loadError, setLoadError] = useState(false);\n  const [loadTracks, setLoadTracks] = useState([]);\n  const [query, setQuery] = useState('');\n  const [visibleSearchBar, setVisibleSearchBar] = useState(false);\n\n  async function tracksFromServer() {\n    try {\n      const response = await trackList();\n\n      setLoadTracks(response.Track.data);\n    } catch (error) {\n      setLoadError(true);\n    }\n  }\n\n  const getTracks = useMemo(() => loadTracks.filter(track => (\n    track.Artist.toLowerCase().includes(query.toLowerCase())\n      || track.title.toLowerCase().includes(query.toLowerCase())\n  )), [query, loadTracks]);\n\n  const loadData = useCallback(debounce(tracksFromServer, 1000), []);\n\n  const handleChange = (track) => {\n    const { value } = track.target;\n\n    setQuery(value);\n    loadData();\n    value === ''\n      ? setVisibleSearchBar(false)\n      : setVisibleSearchBar(true);\n  };\n\n  const handleClose = (event) => {\n    event.preventDefault();\n    setQuery('');\n    setVisibleSearchBar(false);\n  };\n\n  return (\n    <>\n      <div className=\"src d-none d-md-block\">\n        <form>\n          {loadError\n            ? <LoadError />\n            : (\n              <Search\n                handleClose={handleClose}\n                handleChange={handleChange}\n                query={query}\n              />\n            )\n          }\n        </form>\n      </div>\n      {visibleSearchBar && <SearchContent tracks={getTracks} />}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}